#BlueJ class context
comment0.target=Bar
comment0.text=\n\ Class\ Bar\:\ for\ use\ as\ a\ health\ bar\ or\ progress\ bar\ as\ well\ as\ for\ other\ types\ of\ measurements\ for\ visual\ of\ value\ in\ a\ bar\ form\n\ DO\ NOT\ EDIT\ THIS\ CLASS\ as\ everything\ can\ be\ controlled\ through\ method\ calls.\n
comment1.params=refText\ unitType\ initValue\ maxValue
comment1.target=Bar(java.lang.String,\ java.lang.String,\ int,\ int)
comment1.text=\n\ Bar\ Constructor\:\ saves\ the\ initial\ values\ that\ are\ brought\ in\ and\ creates\ the\ bar\ image\ through\ the\ 'add(int)'\ call,\n\ which\ sets\ the\ initial\ value\ of\ the\ bar\ and\ calls\ the\ 'newImage'\ method\ to\ build\ and\ set\ a\ new\ image\ for\ the\ bar.\n\n\ @param\ 'refText'\:\ a\ text\ string\ to\ specify\ what\ the\ bar\ is\ for\ (be\ specific\ enough\ so\ that\ all\ bars\ can\ be\ distinguished\ one\ from\ another)\n\ @param\ 'unitType'\:\ a\ text\ string\ to\ specify\ what\ measure\ is\ being\ used\ in\ the\ bar\ ("percentage",\ "points",\ "frames\ per\ second",\ or\ whatever)\n\ @param\ 'initValue'\:\ the\ value\ the\ bar\ should\ be\ initially\ set\ to\n\ @param\ 'maxValue'\:\ the\ highest\ value\ the\ bar\ is\ allowed\ to\ hold\n
comment10.params=
comment10.target=int\ getBreakValue()
comment10.text=\n\ Method\ 'getBreakValue'\:\ returns\ the\ current\ value\ at\ which\ the\ color\ of\ the\ bar\ will\ change\n\ (the\ variable\ 'usingBreakValue'\ must\ be\ 'true'\ for\ value\ breaking\ is\ to\ be\ active;\ using\ 'setBreakValue'\ will\ automatically\n\ set\ 'usingBreakVaule'\ to\ 'true'.\n\n\ @return\:\ the\ value\ where\ the\ color\ of\ the\ bar\ will\ change\n
comment11.params=
comment11.target=boolean\ getBreakLow()
comment11.text=\n\ Method\ 'getBreakLow'\:\ returns\ the\ boolean\ value\ that\ determines\ if\ the\ danger\ color\ is\ used\ at\ the\ low\ end\ or\ the\ high\ end\ of\ the\ range\n\ (setting\ it\ to\ 'minimumValue'\ or\ 'maximumValue'\ will\ essentially\ deactivate\ breaking)\n\n\ @return\:\ the\ break\ state\ (danger\ color\ for\ low\ values\ when\ true)\ of\ the\ bar\n
comment12.params=
comment12.target=greenfoot.Color\ getBackgroundColor()
comment12.text=\n\ Method\ 'getBackgroundColor'\:\ returns\ the\ current\ background\ color\ of\ the\ image\ for\ the\ bar\n\n\ @return\:\ the\ current\ color\ used\ for\ the\ background\ of\ the\ bar\ image\ (behind\ the\ bar\ and\ the\ text,\ alike)\n
comment13.params=
comment13.target=greenfoot.Color\ getTextColor()
comment13.text=\n\ Method\ 'getTextColor'\:\ returns\ the\ current\ text\ and\ frame\ color\n\n\ @return\:\ the\ current\ color\ used\ for\ the\ text\ and\ the\ frame\ of\ the\ bar\n
comment14.params=
comment14.target=greenfoot.Color\ getSafeColor()
comment14.text=\n\ Method\ 'getSafeColor'\:\ returns\ the\ current\ color\ used\ for\ values\ above\ any\ break\ point,\ if\ 'breakLow'\ is\ 'true',\ else\ below\n\n\ @return\:\ the\ current\ color\ of\ the\ color\ portion\ of\ the\ bar\ used\ for\ 'safe'\ values\n
comment15.params=
comment15.target=greenfoot.Color\ getDangerColor()
comment15.text=\n\ Method\ 'getDangerColor'\:\ returns\ the\ current\ color\ used\ for\ values\ below\ any\ break\ point,\ if\ 'breakLow'\ is\ 'true'\ else\ above\n\n\ @return\:\ the\ current\ color\ of\ the\ color\ portion\ of\ the\ bar\ used\ for\ 'danger'\ values\n
comment16.params=
comment16.target=float\ getFontSize()
comment16.text=\n\ Method\ 'getFontSize'\:\ returns\ the\ current\ font\ size\ for\ the\ text\ used\ in\ the\ bar\ image\n\n\ @return\:\ the\ current\ font\ size\ for\ the\ text\ of\ the\ bar\n
comment17.params=
comment17.target=int\ getMaximumValue()
comment17.text=\n\ Method\ 'getMaximumValue'\:\ returns\ the\ current\ maximum\ value\ of\ the\ bar\n\n\ @return\:\ the\ current\ value\ set\ as\ the\ maximum\ value\ of\ the\ bar\n
comment18.params=
comment18.target=int\ getMinimumValue()
comment18.text=\n\ Method\ 'getMinimumValue'\:\ returns\ the\ current\ minimum\ value\ of\ the\ bar\n\n\ @return\:\ the\ current\ value\ set\ as\ the\ minimum\ value\ of\ the\ bar\n
comment19.params=
comment19.target=java.lang.String\ getReferenceText()
comment19.text=\n\ Method\ 'getReferenceText'\:\ returns\ the\ string\ set\ as\ the\ title\ text\ of\ the\ bar\n\n\ @return\:\ the\ current\ title\ text\ of\ the\ bar\n
comment2.params=
comment2.target=void\ newImage()
comment2.text=\n\ Method\ 'newImage'\:\ builds\ a\ new\ image\ for\ the\ bar,\ determined\ by\ the\ values\ set\ for\ it\n
comment20.params=
comment20.target=java.lang.String\ getUnitOfMeasure()
comment20.text=\n\ Method\ 'getUnitOfMeasure'\:\ returns\ the\ current\ string\ used\ to\ qualify\ the\ value\ of\ the\ bar\n\n\ @return\:\ the\ current\ unit\ of\ measure\ for\ the\ value\ of\ the\ bar\n
comment21.params=
comment21.target=boolean\ getShowTextualUnits()
comment21.text=\n\ Method\ 'getShowTextualUnits'\:\ returns\ the\ current\ state\ of\ showing/hiding\ of\ the\ textual\ value\ and\ unit\ of\ measure\ of\ the\ bar\n\n\ @return\:\ the\ current\ state\ of\ showing/hiding\ of\ the\ string\ representation\ of\ the\ value\ and\ unit\ of\ measure\ on\ the\ right\ side\ of\ the\ bar\n
comment22.params=val
comment22.target=void\ setValue(int)
comment22.text=\n\ Method\ 'setValue'\:\ sets\ a\ new\ value\ for\ the\ bar,\ if\ in\ bounds\n\n\ @param\ 'val'\:\ the\ new\ value\ for\ the\ bar\n
comment23.params=width
comment23.target=void\ setBarWidth(int)
comment23.text=\n\ Method\ 'setBarWidth'\:\ sets\ a\ new\ width\ for\ the\ color\ portion\ of\ the\ bar\n\n\ @param\ 'width'\:\ the\ new\ width\ for\ the\ color\ portion\ of\ the\ bar\n
comment24.params=height
comment24.target=void\ setBarHeight(int)
comment24.text=\n\ Method\ 'setBarHeight'\:\ sets\ a\ new\ height\ for\ the\ color\ portion\ of\ the\ bar\n\n\ @param\ 'height'\:\ the\ new\ height\ for\ the\ color\ portion\ of\ the\ bar\n
comment25.params=percent
comment25.target=void\ setBreakPercent(int)
comment25.text=\n\ Method\ 'setBreakPercent'\:\ sets\ a\ new\ percentage\ value\ where\ the\ bar\ changes\ colors\ between\ safe\ and\ danger\ values\n\ (if\ set\ to\ zero\ or\ one\ hundred,\ the\ bar\ will\ stay\ a\ constant\ color)\n\ 'usingBreakValue'\ will\ be\ automatically\ set\ to\ 'false'\ when\ this\ method\ is\ called\n\n\ @param\ 'percent'\:\ the\ new\ percentage\ in\ the\ range\ of\ allowable\ values\ in\ the\ bar\ at\ which\ the\ color\ of\ the\ bar\ changes\ between\ 'safeColor'\ and\ 'dangerColor'\n
comment26.params=brkVal
comment26.target=void\ setBreakValue(int)
comment26.text=\n\ Method\ 'setBreakValue'\:\ sets\ a\ new\ value\ for\ where\ the\ color\ of\ the\ color\ portion\ of\ the\ bar\ will\ change\ between\ safe\ and\ danger\ values\n\ (if\ set\ to\ minimumValue\ or\ maximumValue,\ the\ bar\ will\ stay\ a\ constant\ color)\n\ 'usingBreakValue'\ will\ be\ automatically\ set\ to\ 'true'\ when\ this\ method\ is\ called\n\n\ @param\ 'brkVal'\:\ the\ new\ value\ where\ the\ color\ of\ the\ color\ portion\ of\ the\ bar\ will\ change\ between\ 'safeColor'\ and\ 'dangerColor'\n
comment27.params=lowBreak
comment27.target=void\ setBreakLow(boolean)
comment27.text=\n\ Method\ setBreakLow\:\ sets\ the\ direction\ of\ safe\ to\ danger\ values;\ true\:\ danger\ values\ are\ low\ and\ safe\ values\ are\ high;\ false\:\ danger\ values\ are\ high\ ...\n\n\ @param\ 'lowBreak'\:\ the\ new\ state\ of\ break\ direction\ to\ use\ with\ the\ bar\n
comment28.params=color
comment28.target=void\ setBackgroundColor(greenfoot.Color)
comment28.text=\n\ Method\ 'setBackgroundColor'\:\ sets\ a\ new\ color\ to\ use\ behind\ the\ text\ and\ bar\ of\ the\ image\n\n\ @param\ 'color'\:\ the\ new\ color\ to\ use\ for\ the\ background\ color\ of\ the\ bar\ image\n
comment29.params=color
comment29.target=void\ setTextColor(greenfoot.Color)
comment29.text=\n\ Method\ 'setTextColor'\:\ sets\ a\ new\ color\ for\ the\ text\ and\ frame\ of\ the\ bar\ image\n\n\ @param\ 'color'\:\ the\ new\ color\ for\ the\ text\ and\ frame\ of\ the\ bar\ image\n
comment3.params=amount
comment3.target=void\ add(int)
comment3.text=\n\ Method\ 'add'\:\ add\ an\ amount\ to\ the\ value\ of\ the\ bar,\ checks\ to\ make\ sure\ the\ new\ value\ is\ between\ minimumValue\ and\ maximumValue,\n\ then,\ calls\ 'newImage'\ to\ build\ and\ set\ the\ new\ image\ for\ the\ bar.\n\n\ @param\ 'amount'\:\ the\ amount\ to\ add\ (if\ not\ negative)\ or\ subtract\ (if\ negative)\ to\ the\ current\ value\ of\ the\ bar\n
comment30.params=color
comment30.target=void\ setSafeColor(greenfoot.Color)
comment30.text=\n\ Method\ 'setSafeColor'\:\ sets\ a\ new\ color\ for\ the\ color\ portion\ of\ the\ bar\ for\ safe\ values\n\n\ @param\ 'color'\:\ the\ new\ color\ for\ safe\ values\ in\ the\ color\ portion\ of\ the\ bar\n
comment31.params=color
comment31.target=void\ setDangerColor(greenfoot.Color)
comment31.text=\n\ Method\ 'setDangerColor'\:\ sets\ a\ new\ color\ for\ the\ color\ portion\ of\ the\ bar\ for\ danger\ values\n\n\ @param\ 'color'\:\ the\ new\ color\ for\ danger\ values\ in\ the\ color\ portion\ of\ the\ bar\n
comment32.params=size
comment32.target=void\ setFontSize(float)
comment32.text=\n\ Method\ 'setFontSize'\:\ sets\ the\ font\ size\ to\ use\ for\ all\ text\ in\ the\ bar\ image\n\n\ @param\ 'size'\:\ the\ new\ font\ size\ for\ text\ used\ in\ the\ bar\n
comment33.params=maxVal
comment33.target=void\ setMaximumValue(int)
comment33.text=\n\ Method\ 'setMaximumValue'\:\ sets\ a\ new\ maximum\ for\ allowable\ values\ for\ the\ bar\n\n\ @param\ 'maxVal'\:\ the\ new\ maximum\ for\ the\ value\ of\ the\ bar\n
comment34.params=minVal
comment34.target=void\ setMinimumValue(int)
comment34.text=\n\ Method\ 'setMinimumValue'\:\ sets\ a\ new\ minimum\ for\ allowable\ values\ for\ the\ bar\n\n\ @param\ 'minVal'\:\ the\ new\ minimum\ for\ the\ value\ of\ the\ bar\n
comment35.params=refText
comment35.target=void\ setReferenceText(java.lang.String)
comment35.text=\n\ Method\ 'setReferenceText'\:\ sets\ new\ title\ text\ for\ the\ bar\n\n\ @param\ 'refText'\:\ the\ new\ title\ text\ (or\ reference\ text)\ for\ the\ bar\n
comment36.params=uom
comment36.target=void\ setUnitOfMeasure(java.lang.String)
comment36.text=\n\ Method\ 'setUnitOfMeasure'\:\ sets\ new\ unit\ of\ measure\ text\ for\ the\ bar\n\n\ @param\ 'uom'\:\ the\ new\ unit\ of\ measure\ text\ for\ the\ bar\n
comment37.params=show
comment37.target=void\ setShowTextualUnits(boolean)
comment37.text=\n\ Method\ 'setShowTextualUnits'\:\ sets\ the\ state\ of\ showing/hiding\ of\ the\ textual\ value\ and\ unit\ of\ measure\ on\ the\ right\ side\ of\ the\ bar\n\n\ @param\ 'show'\:\ the\ new\ state\ of\ showing/hiding\ of\ value\ text\ for\ the\ bar\n
comment4.params=amount
comment4.target=void\ subtract(int)
comment4.text=\n\ Method\ 'subtract'\:\ subtracts\ an\ amount\ from\ the\ value\ of\ the\ bar,\ checks\ to\ make\ sure\ the\ new\ value\ does\ not\ overstep\ its\ bounds,\n\ then,\ calls\ 'newImage'\ to\ build\ and\ set\ the\ new\ image\ for\ the\ bar.\n\n\ @param\ 'amount'\:\ the\ amount\ to\ subtract\ (if\ positive)\ or\ add\ (if\ negative)\ to\ the\ current\ value\ of\ the\ bar\n
comment5.params=
comment5.target=void\ checkValue()
comment5.text=\n\ Method\ 'checkValue'\:\ ensures\ that\ the\ new\ value\ in\ between\ the\ minimum\ value\ and\ the\ maximum\ value\ for\ the\ bar\n
comment6.params=
comment6.target=int\ getValue()
comment6.text=\n\ Method\ 'getValue'\:\ returns\ the\ current\ value\ of\ the\ bar\n\n\ @return\:\ the\ current\ value\ of\ the\ bar\n
comment7.params=
comment7.target=int\ getBarWidth()
comment7.text=\n\ Method\ 'getBarWidth'\:\ returns\ the\ current\ width\ of\ the\ bar\ (color\ portion\ only)\n\n\ @return\:\ the\ current\ width\ of\ the\ bar\n
comment8.params=
comment8.target=int\ getBarHeight()
comment8.text=\n\ Method\ 'getBarHeight'\:\ returns\ the\ current\ height\ of\ the\ bar\ (color\ portion\ only)\n\n\ @return\:\ the\ current\ height\ of\ the\ bar\n
comment9.params=
comment9.target=int\ getBreakPercent()
comment9.text=\n\ Method\ 'getBreakPercent'\:\ returns\ the\ range\ percent\ at\ which\ the\ color\ of\ the\ bar\ changes\ between\ lower\ values\ and\ higher\ values\n\ (the\ variable\ 'usingBreakValue'\ must\ be\ 'false'\ for\ percent\ breaking\ is\ to\ be\ active;\ using\ 'setBreakPercent'\ will\ automatically\n\ set\ 'usingBreakValue'\ to\ 'false'.\n\n\ @return\:\ the\ percent\ value\ that\ determines\ where\ the\ color\ of\ the\ bar\ will\ change\n
numComments=38
